{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Bootcamp/Homework/employee_directory/employee_directory/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nconst CountContext = createContext();\nconst {\n  Provider\n} = CountContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"subtract\":\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      throw new Error(`Invalid action type: ${action.type}`);\n  }\n};\n\nconst CountProvider = ({\n  value = 0,\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    count: value\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst useCountContext = () => {\n  return useContext(CountContext);\n};\n\nexport { CountProvider, useCountContext };","map":{"version":3,"sources":["/Users/admin/Desktop/Bootcamp/Homework/employee_directory/employee_directory/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","CountContext","Provider","reducer","state","action","type","count","Error","CountProvider","value","props","dispatch","useCountContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,KAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,UAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAW,wBAAuBH,MAAM,CAACC,IAAK,EAA9C,CAAN;AANF;AAQD,CATD;;AAWA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,CAAV;AAAa,KAAGC;AAAhB,CAAD,KAA6B;AACjD,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,UAAU,CAACI,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAEG;AAAT,GAAV,CAApC;AAEA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACN,KAAD,EAAQQ,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAJD;;AAMA,MAAME,eAAe,GAAG,MAAM;AAC5B,SAAOb,UAAU,CAACC,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASQ,aAAT,EAAwBI,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nconst CountContext = createContext();\nconst { Provider } = CountContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case \"add\":\n    return { count: state.count + 1 };\n  case \"subtract\":\n    return { count: state.count - 1 };\n  default:\n    throw new Error(`Invalid action type: ${action.type}`);\n  }\n};\n\nconst CountProvider = ({ value = 0, ...props }) => {\n  const [state, dispatch] = useReducer(reducer, { count: value });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useCountContext = () => {\n  return useContext(CountContext);\n};\n\nexport { CountProvider, useCountContext };\n"]},"metadata":{},"sourceType":"module"}