{"ast":null,"code":"import axios from \"axios\";\nconst employees = [];\nexport default {\n  fetchEmployees: function () {\n    return axios.get(\"https://randomuser.me/api/?results=10&nat=us\").then(res => {\n      const employees = res.data.results;\n      return employees.map(employee => {\n        return {\n          name: employee.name.first + \" \" + employee.name.last,\n          age: \"\",\n          number: \"\",\n          location: \"\",\n          image: \"\"\n        };\n      });\n    });\n  } // getUsersByLanguage: function(language) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .get(\"https://api.github.com/orgs/github/public_members\")\n  //       .then(res => {\n  //         const users = res.data;\n  //         const results = users.map(user => {\n  //           return {\n  //             login: user.login,\n  //             image: user.avatar_url,\n  //             language: language\n  //           };\n  //         });\n  //         resolve(results);\n  //       })\n  //       .catch(err => reject(err));\n  //   });\n  // },\n  // // Return a Promise to simulate an async call\n  // getLanguagesList: function() {\n  //   return new Promise(resolve => {\n  //     resolve(languages);\n  //   });\n  // }\n\n};","map":{"version":3,"sources":["/Users/admin/Desktop/Bootcamp/Homework/employee_directory/employee_directory/src/utils/API.js"],"names":["axios","employees","fetchEmployees","get","then","res","data","results","map","employee","name","first","last","age","number","location","image"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,SAAS,GAAG,EAAlB;AAEA,eAAe;AAEbC,EAAAA,cAAc,EAAE,YAAY;AAC1B,WAAOF,KAAK,CACTG,GADI,CACA,8CADA,EAEJC,IAFI,CAECC,GAAG,IAAI;AACX,YAAMJ,SAAS,GAAGI,GAAG,CAACC,IAAJ,CAASC,OAA3B;AACA,aAAON,SAAS,CAACO,GAAV,CAAcC,QAAQ,IAAI;AAC/B,eAAO;AACLC,UAAAA,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcC,KAAd,GAAsB,GAAtB,GAA4BF,QAAQ,CAACC,IAAT,CAAcE,IAD3C;AAELC,UAAAA,GAAG,EAAE,EAFA;AAGLC,UAAAA,MAAM,EAAE,EAHH;AAILC,UAAAA,QAAQ,EAAE,EAJL;AAKLC,UAAAA,KAAK,EAAE;AALF,SAAP;AAOD,OARM,CAAP;AASD,KAbI,CAAP;AAcD,GAjBY,CAmBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1Ca,CAAf","sourcesContent":["import axios from \"axios\";\n\n\nconst employees = [];\n\nexport default {\n\n  fetchEmployees: function () {\n    return axios\n      .get(\"https://randomuser.me/api/?results=10&nat=us\")\n      .then(res => {\n        const employees = res.data.results;\n        return employees.map(employee => {\n          return {\n            name: employee.name.first + \" \" + employee.name.last,\n            age: \"\",\n            number: \"\",\n            location: \"\",\n            image: \"\",\n          };\n        });\n      });\n  },\n\n  // getUsersByLanguage: function(language) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .get(\"https://api.github.com/orgs/github/public_members\")\n  //       .then(res => {\n  //         const users = res.data;\n  //         const results = users.map(user => {\n  //           return {\n  //             login: user.login,\n  //             image: user.avatar_url,\n  //             language: language\n  //           };\n  //         });\n  //         resolve(results);\n  //       })\n  //       .catch(err => reject(err));\n  //   });\n  // },\n  // // Return a Promise to simulate an async call\n  // getLanguagesList: function() {\n  //   return new Promise(resolve => {\n  //     resolve(languages);\n  //   });\n  // }\n};\n"]},"metadata":{},"sourceType":"module"}